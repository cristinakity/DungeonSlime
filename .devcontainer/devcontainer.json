// For format details, see https://aka.ms/devcontainer.json. For config options, see the
// README at: https://github.com/devcontainers/templates/tree/main/src/dotnet
{
	"name": "MonoGame .NET 8",
	// Or use a Dockerfile or Docker Compose file. More info: https://containers.dev/guide/dockerfile
	"image": "mcr.microsoft.com/devcontainers/dotnet:1-8.0",
	// Features to add to the dev container. More info: https://containers.dev/features.
	// "features": {},
	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// "forwardPorts": [5000, 5001],
	// "portsAttributes": {
	//		"5001": {
	//			"protocol": "https"
	//		}
	// }
	"runArgs": [
		"--device=/dev/dri:/dev/dri",
		"--device=/dev/input:/dev/input",
		"--ipc=host"
	],
	"containerEnv": {
		"DISPLAY": ":0",
		"XDG_RUNTIME_DIR": "/run/user/1000",
		"DBUS_SESSION_BUS_ADDRESS": "unix:path=/run/user/1000/bus",
		"WAYLAND_DISPLAY": "wayland-0"
	},
	"remoteEnv": {
		"DISPLAY": ":0",
		"XDG_RUNTIME_DIR": "/run/user/1000"
	},
	// Use 'postCreateCommand' to run commands after the container is created.
	"postCreateCommand": "bash .devcontainer/post-create.sh",
	// Configure tool-specific properties.
	"customizations": {
		"vscode": {
			"extensions": [
				"ms-dotnettools.csdevkit",
				"ms-dotnettools.csharp",
				"aaron-bond.better-comments",
				"r88.monogame"
			]
		}
	},
	"mounts": [
		"source=/tmp/.X11-unix,target=/tmp/.X11-unix,type=bind",
		"source=/run/user/1000,target=/run/user/1000,type=bind"
	]
}